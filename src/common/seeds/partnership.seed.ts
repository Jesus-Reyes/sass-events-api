import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { Partnership } from '../../api/partnership-catalogo/entities/partnership.entity';

@Injectable()
export class PartnershipSeed {
  constructor(
    @InjectRepository(Partnership)
    private partnershipRepository: Repository<Partnership>,
  ) {}

  async seed(): Promise<void> {
    console.log('üå± Seeding Partnerships...');

    const partnershipsData = [
      {
        name: 'BBVA Technology Services',
        description: 'Servicios tecnol√≥gicos internos especializados en arquitectura empresarial',
        tipo: 'Interno'
      },
      {
        name: 'IBM Global Services',
        description: 'Proveedor de servicios de consultor√≠a y desarrollo de software empresarial',
        tipo: 'Externo'
      },
      {
        name: 'Accenture Digital Solutions',
        description: 'Consultor√≠a especializada en transformaci√≥n digital y desarrollo √°gil',
        tipo: 'Externo'
      },
      {
        name: 'Microsoft Partner Network',
        description: 'Alianza estrat√©gica para servicios en la nube y tecnolog√≠as Microsoft',
        tipo: 'Externo'
      },
      {
        name: 'BBVA Innovation Center',
        description: 'Centro de innovaci√≥n interno para nuevas tecnolog√≠as y productos digitales',
        tipo: 'Interno'
      },
      {
        name: 'Deloitte Technology',
        description: 'Servicios de consultor√≠a tecnol√≥gica y implementaci√≥n de soluciones empresariales',
        tipo: 'Externo'
      },
      {
        name: 'AWS Professional Services',
        description: 'Servicios profesionales de Amazon Web Services para migraci√≥n y optimizaci√≥n cloud',
        tipo: 'Externo'
      },
      {
        name: 'BBVA Data & Analytics',
        description: 'Equipo interno especializado en an√°lisis de datos y business intelligence',
        tipo: 'Interno'
      },
      {
        name: 'Cognizant Digital Business',
        description: 'Proveedor de servicios de desarrollo y mantenimiento de aplicaciones',
        tipo: 'Externo'
      },
      {
        name: 'Red Hat Services',
        description: 'Servicios especializados en tecnolog√≠as open source y contenedores',
        tipo: 'Externo'
      }
    ];

    for (const partnershipData of partnershipsData) {
      const existingPartnership = await this.partnershipRepository.findOne({
        where: { name: partnershipData.name }
      });

      if (!existingPartnership) {
        const partnership = this.partnershipRepository.create(partnershipData);
        await this.partnershipRepository.save(partnership);
        console.log(`‚úÖ Partnership creado: ${partnershipData.name}`);
      } else {
        console.log(`‚ö†Ô∏è Partnership ya existe: ${partnershipData.name}`);
      }
    }

    console.log('‚úÖ Partnerships seed completado');
  }

  async rollback(): Promise<void> {
    console.log('üîÑ Rollback Partnerships...');
    await this.partnershipRepository.clear();
    console.log('‚úÖ Partnerships rollback completado');
  }
}
